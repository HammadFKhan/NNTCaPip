function [lateSpikeEnsemble, nolateSpikeEnsemble] = travelingWaveEnsemble(spikeTrials,lateSpikeTrials,nolateSpikeTrials,ROI,ROIcentroid,AverageImage)
% Parse spike trials into late/no late spike and then calculate the
% ensemble space that it occupies. Using this we can then reproject into
% the broad ensemble space and (hopefully) cluster the data

%% FOV 
count = 1;
for i = lateSpikeTrials
    lateSpikes{count} = spikeTrials{i};
    count = count+1;
end

count = 1;
for i = nolateSpikeTrials
    nolateSpikes{count} = spikeTrials{i};
    count = count+1;
end

if iscell(lateSpikes)
    lateSpikes = horzcat(lateSpikes{:});
end

if iscell(nolateSpikes)
    nolateSpikes = horzcat(nolateSpikes{:});
end

% Now extract representative ensembles
% Late Spike
FactorCorrection = 5*floor(size(lateSpikes,2)/5); % Correct for frame size aquisition
lateSpikeEnsemble = ensembleAnalysis(lateSpikes(:,1:FactorCorrection),ROI,ROIcentroid);
[~,I] = sort(cellfun(@length,lateSpikeEnsemble.NodeList),'descend'); %sort max node size
rankEdges = lateSpikeEnsemble.NumEdges(:,I);
rankEnsembles = lateSpikeEnsemble.NodeList(:,I); 
[grad,~]=colorGradient([1 0 0],[0 0 0],6);
lateSpikeEnsemble.rankEnsembles = rankEnsembles;
lateSpikeEnsemble.rankEdges = rankEdges;
lateSpikeEnsemble.Spikes = lateSpikes;
figure,
for i = 1:5
    axis off
    color = jet(3);
    EnsembleMap(AverageImage,ROIcentroid,lateSpikeEnsemble.rankEnsembles{i},5,grad(i,:))
    set(gcf,'Position',[100 100 500 500])
    drawnow
    hold on
end

% No Late Spike
FactorCorrection = 5*floor(size(nolateSpikes,2)/5); % Correct for frame size aquisition
nolateSpikeEnsemble = ensembleAnalysis(nolateSpikes(:,1:FactorCorrection),ROI,ROIcentroid);
[~,I] = sort(cellfun(@length,nolateSpikeEnsemble.NodeList),'descend'); %sort max node size
rankEdges = nolateSpikeEnsemble.NumEdges(:,I);
rankEnsembles = nolateSpikeEnsemble.NodeList(:,I); 
[grad,~]=colorGradient([0 0 1],[0 0 0],6);
nolateSpikeEnsemble.rankEnsembles = rankEnsembles;
nolateSpikeEnsemble.rankEdges = rankEdges;
nolateSpikeEnsemble.Spikes = nolateSpikes;
figure,
for i = 1:5
    axis off
    color = jet(3);
    EnsembleMap(AverageImage,ROIcentroid,nolateSpikeEnsemble.rankEnsembles{i},4,grad(i,:))
    set(gcf,'Position',[100 100 500 500])
    drawnow
    hold on
end

% Combine Maps
figure,imagesc(interp2(nolateSpikeEnsemble.sim_index,2)),colormap(jet),caxis([0.13 .8])
K = (1/25)*ones(5);
figure,imagesc(interp2(conv2(nolateSpikeEnsemble.sim_index,K,'same'),2)),colormap(jet),caxis([.08 .3])

%% Entropy
% Late Spike
sizeE = cellfun(@size,lateSpikeEnsemble.rankEnsembles,'UniformOutput',false);
sizeE = cell2mat(sizeE);
sizeE(sizeE==1) = [];
sizeE = sizeE/max(sizeE);
figure,plot(sizeE),title('LS Ranked Ensembles')

sizeEdge = cell2mat(lateSpikeEnsemble.rankEdges);
sizeEdge = sizeEdge/max(sizeEdge);
figure,plot(sizeEdge),title('LS Ranked Connections')
% Information Entropy
disp('Entropy for Late Spike')
lateSpikeinformationEntropy = shannonEntropy(lateSpikeEnsemble.rankEnsembles);

% No Late Spike
sizeE = cellfun(@size,nolateSpikeEnsemble.rankEnsembles,'UniformOutput',false);
sizeE = cell2mat(sizeE);
sizeE(sizeE==1) = [];
sizeE = sizeE/max(sizeE);
figure,plot(sizeE),title('No LS Ranked Ensembles')

sizeEdge = cell2mat(nolateSpikeEnsemble.rankEdges);
sizeEdge = sizeEdge/max(sizeEdge);
figure,plot(sizeEdge),title('No LS Ranked Connections')
% Information Entropy
disp('Entropy for No Late Spike')
nolateSpikeinformationEntropy = shannonEntropy(nolateSpikeEnsemble.rankEnsembles);
%% Ensemble State Space

                                                    
% % Plot mean manifold for the boundry
%     k = boundary(x,y);
%     x1 = interp1(1:length(x(k)),x(k),1:0.05:length(x(k)),'pchip');
%     y1 = interp1(1:length(y(k)),y(k),1:0.05:length(y(k)),'pchip');
%     x2 = smoothdata(x1,'gaussian',50);
%     y2 = smoothdata(y1,'gaussian',50);
%     plot(x2,y2,'Color',[0 0 0],'LineWidth',2)
figure
for i = 1:size(manifold1,2)
    if size(manifold1{i},1)>2
        x = manifold1{i}(:,1);y = manifold1{i}(:,2);
        scatter(x,y,4,color(count,:),'filled'),hold on
    end
end
title('LS')
%%
clear x y
figure
manifold2 = nolateSpikeEnsemble.rankedActivityCoords; % Eached rank coords is the distance between each cell pair that makes up an ensemble
for i = 1:size(manifold2,2) % Basically how many ensembles there are
    if size(manifold2{i},1)>2
        x = manifold2{i}(:,1);y = manifold2{i}(:,2);
        k = boundary(x,y,0.1);
        x1 = interp1(1:length(x(k)),x(k),1:0.05:length(x(k)),'pchip');
        y1 = interp1(1:length(y(k)),y(k),1:0.05:length(y(k)),'pchip');
        x2 = smoothdata(x1,'gaussian',10);
        y2 = smoothdata(y1,'gaussian',10);
        plot(x2,y2,'Color',[0.5 0.5 0.5 0.5]),hold on
    end
end
% Plot mean manifold for the boundry
%     k = boundary(x,y);
%     x1 = interp1(1:length(x(k)),x(k),1:0.05:length(x(k)),'pchip');
%     y1 = interp1(1:length(y(k)),y(k),1:0.05:length(y(k)),'pchip');
%     x2 = smoothdata(x1,'gaussian',50);
%     y2 = smoothdata(y1,'gaussian',50);
%     plot(x2,y2,'Color',[0 0 0],'LineWidth',2)
figure
for i = 1:size(manifold2,2)
    if size(manifold2{i},1)>2
        x = manifold2{i}(:,1);y = manifold2{i}(:,2);
        scatter(x,y,4,color(count,:),'filled'),hold on
    end
end
title('No LS')
